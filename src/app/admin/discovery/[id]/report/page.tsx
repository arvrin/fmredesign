/**
 * Discovery Report Page
 * PDF generation and report view
 */

'use client';

import { useState, useEffect } from 'react';
import { useParams, useRouter } from 'next/navigation';
import { DiscoverySession } from '@/lib/admin/discovery-types';
import { DiscoveryService } from '@/lib/admin/discovery-service';
import { Button } from '@/design-system/components/primitives/Button';
import { ArrowLeft, FileText, Download, Eye, Users } from 'lucide-react';

export default function DiscoveryReportPage() {
  const params = useParams();
  const router = useRouter();
  const sessionId = params.id as string;
  
  const [session, setSession] = useState<DiscoverySession | null>(null);
  const [reportHTML, setReportHTML] = useState<string>('');
  const [isLoading, setIsLoading] = useState(true);
  const [isGeneratingPDF, setIsGeneratingPDF] = useState(false);

  useEffect(() => {
    const loadSession = async () => {
      try {
        const sessionData = await DiscoveryService.getDiscoverySession(sessionId);
        if (sessionData) {
          setSession(sessionData);
          const report = DiscoveryService.generateDiscoveryReport(sessionData);
          setReportHTML(report);
        } else {
          router.push('/admin/clients');
        }
      } catch (error) {
        console.error('Error loading discovery session:', error);
        router.push('/admin/clients');
      } finally {
        setIsLoading(false);
      }
    };

    if (sessionId) {
      loadSession();
    }
  }, [sessionId, router]);

  const handleGeneratePDF = async () => {
    if (!session) return;
    
    setIsGeneratingPDF(true);
    try {
      // Import jsPDF dynamically to avoid SSR issues
      const jsPDF = (await import('jspdf')).default;
      
      const doc = new jsPDF();
      const analytics = DiscoveryService.generateDiscoveryAnalytics(session);
      
      // Title
      doc.setFontSize(20);
      doc.text('Discovery Report', 20, 30);
      
      // Company name
      doc.setFontSize(16);
      doc.text(session.companyFundamentals.companyName, 20, 45);
      
      // Executive Summary
      doc.setFontSize(12);
      doc.text('Executive Summary', 20, 65);
      doc.setFontSize(10);
      doc.text(`Project: ${session.projectOverview.projectName}`, 20, 75);
      doc.text(`Type: ${session.projectOverview.projectType}`, 20, 85);
      doc.text(`Completion: ${analytics.completionRate.toFixed(1)}%`, 20, 95);
      doc.text(`Complexity: ${analytics.projectComplexity}`, 20, 105);
      doc.text(`Budget: ₹${analytics.estimatedBudget.toLocaleString()}`, 20, 115);
      
      // Project Description
      doc.text('Project Description:', 20, 135);
      const description = doc.splitTextToSize(session.projectOverview.projectDescription, 170);
      doc.text(description, 20, 145);
      
      // Talent Requirements
      let yPos = 145 + (description.length * 5) + 20;
      doc.text(`Recommended Team (${analytics.recommendedTeamSize} members):`, 20, yPos);
      
      analytics.talentRequirements.forEach((req, index) => {
        yPos += 10;
        if (yPos > 270) {
          doc.addPage();
          yPos = 30;
        }
        doc.text(`• ${req.role} (${req.experienceLevel}): ${req.skillsRequired.join(', ')} - ${req.hoursRequired}h`, 20, yPos);
      });
      
      // Footer
      doc.setFontSize(8);
      doc.text('Generated by Freaking Minds Discovery System', 20, 285);
      doc.text(`Report Date: ${new Date().toLocaleDateString()}`, 20, 290);
      
      // Save PDF
      doc.save(`discovery-report-${session.companyFundamentals.companyName.replace(/\s+/g, '-').toLowerCase()}.pdf`);
    } catch (error) {
      console.error('Error generating PDF:', error);
      alert('Failed to generate PDF. Please try again.');
    } finally {
      setIsGeneratingPDF(false);
    }
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-fm-neutral-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-fm-magenta-600 mx-auto mb-4"></div>
          <p className="text-fm-neutral-600">Loading discovery report...</p>
        </div>
      </div>
    );
  }

  if (!session) {
    return (
      <div className="min-h-screen bg-fm-neutral-50 flex items-center justify-center">
        <div className="text-center">
          <p className="text-fm-neutral-600">Discovery session not found</p>
        </div>
      </div>
    );
  }

  const analytics = DiscoveryService.generateDiscoveryAnalytics(session);

  return (
    <div className="min-h-screen bg-fm-neutral-50">
      {/* Header */}
      <div className="bg-white border-b border-fm-neutral-200">
        <div className="max-w-6xl mx-auto px-6 py-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-4">
              <Button
                variant="outline"
                icon={<ArrowLeft className="h-4 w-4" />}
                onClick={() => router.push(`/admin/discovery/new?clientId=${session.clientId}`)}
              >
                Back to Discovery
              </Button>
              <div>
                <h1 className="text-2xl font-bold text-fm-neutral-900">
                  Discovery Report: {session.companyFundamentals.companyName}
                </h1>
                <p className="text-fm-neutral-600">
                  Comprehensive client analysis and recommendations
                </p>
              </div>
            </div>
            
            <div className="flex items-center gap-3">
              <Button
                variant="outline"
                onClick={() => router.push(`/admin/creativeminds/match?sessionId=${sessionId}`)}
                icon={<Users className="h-4 w-4" />}
              >
                Find Talent
              </Button>
              
              <Button
                onClick={handleGeneratePDF}
                disabled={isGeneratingPDF}
                icon={<Download className="h-4 w-4" />}
              >
                {isGeneratingPDF ? 'Generating...' : 'Download PDF'}
              </Button>
            </div>
          </div>
        </div>
      </div>

      {/* Report Content */}
      <div className="max-w-4xl mx-auto px-6 py-8">
        {/* Analytics Summary */}
        <div className="bg-white rounded-xl border border-fm-neutral-200 p-6 mb-8">
          <h2 className="text-xl font-semibold text-fm-neutral-900 mb-6">Discovery Analytics</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <div className="text-center p-4 bg-fm-neutral-50 rounded-lg">
              <div className="text-2xl font-bold text-fm-magenta-600">{analytics.completionRate.toFixed(0)}%</div>
              <div className="text-sm text-fm-neutral-600">Completion Rate</div>
            </div>
            
            <div className="text-center p-4 bg-fm-neutral-50 rounded-lg">
              <div className="text-2xl font-bold text-fm-magenta-600">{analytics.projectComplexity}</div>
              <div className="text-sm text-fm-neutral-600">Complexity</div>
            </div>
            
            <div className="text-center p-4 bg-fm-neutral-50 rounded-lg">
              <div className="text-2xl font-bold text-fm-magenta-600">{analytics.recommendedTeamSize}</div>
              <div className="text-sm text-fm-neutral-600">Team Size</div>
            </div>
            
            <div className="text-center p-4 bg-fm-neutral-50 rounded-lg">
              <div className="text-2xl font-bold text-fm-magenta-600">₹{analytics.estimatedBudget.toLocaleString()}</div>
              <div className="text-sm text-fm-neutral-600">Budget</div>
            </div>
          </div>
          
          <div className="mt-6 p-4 bg-blue-50 rounded-lg">
            <h3 className="font-semibold text-blue-900 mb-2">Timeline Assessment</h3>
            <p className="text-blue-800">{analytics.timelineAssessment}</p>
          </div>
        </div>

        {/* Talent Requirements */}
        <div className="bg-white rounded-xl border border-fm-neutral-200 p-6 mb-8">
          <h2 className="text-xl font-semibold text-fm-neutral-900 mb-6">Recommended Team Structure</h2>
          
          <div className="space-y-4">
            {analytics.talentRequirements.map((req, index) => (
              <div key={index} className="p-4 border border-fm-neutral-200 rounded-lg">
                <div className="flex justify-between items-start mb-2">
                  <h3 className="font-semibold text-fm-neutral-900">{req.role}</h3>
                  <span className={`px-2 py-1 rounded text-xs ${
                    req.priority === 'must_have' 
                      ? 'bg-red-100 text-red-800' 
                      : 'bg-yellow-100 text-yellow-800'
                  }`}>
                    {req.priority.replace('_', ' ')}
                  </span>
                </div>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                  <div>
                    <strong>Experience:</strong> {req.experienceLevel}
                  </div>
                  <div>
                    <strong>Hours:</strong> {req.hoursRequired}h
                  </div>
                  <div>
                    <strong>Skills:</strong> {req.skillsRequired.join(', ')}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Report Preview */}
        <div className="bg-white rounded-xl border border-fm-neutral-200 p-6">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-xl font-semibold text-fm-neutral-900">Detailed Report</h2>
            <Button
              variant="outline"
              icon={<Eye className="h-4 w-4" />}
              onClick={() => {
                const newWindow = window.open('', '_blank');
                if (newWindow) {
                  newWindow.document.write(`
                    <html>
                      <head><title>Discovery Report</title></head>
                      <body style="font-family: Arial, sans-serif; padding: 20px;">
                        <div style="white-space: pre-line;">${reportHTML}</div>
                      </body>
                    </html>
                  `);
                  newWindow.document.close();
                }
              }}
            >
              Preview Full Report
            </Button>
          </div>
          
          <div className="prose max-w-none">
            <div className="whitespace-pre-line text-sm text-fm-neutral-700">
              {reportHTML.substring(0, 1000)}...
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}